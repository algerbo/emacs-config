;;; Обработал напильником, для себя.
;;; http://emacs-fu.blogspot.com/2011/08/customizing-mode-line.html
;;; OR:
;;; http://amitp.blogspot.com/2011/08/emacs-custom-mode-line.html

(setq frame-title-format
      '(buffer-file-name "%f" (dired-directory dired-directory "%b")))

(setq-default
 mode-line-format
 '(
   ;; Position, line:column
   (:propertize "%02l:%02c" face mode-line-position-face)

   ;; relative position, size of file
   " ["
   (:propertize "%p" face mode-line-position-face)  ;; % above top
   "/"
   (:propertize "%I" face mode-line-position-face ) ;; size
   "] "

   ;; read-only or modified status
   (:eval
    (cond
     (buffer-read-only    (propertize "[ RO ]" 'face 'mode-line-read-only-face))
     ((buffer-modified-p) (propertize "[ CH ]" 'face 'mode-line-modified-face))
     (t                   (propertize "[ -- ]" 'face 'mode-line-inactive))))
   " "
   ;; buffer/file name
   (:propertize "%b" face mode-line-filename-face)

   ;; buffer coding systems end-of-line format
   (:propertize " (%Z)" face mode-line-process-face)

   ;; mode indicators:
   ;; vc, recursive edit, major mode, minor modes, process, global
   (vc-mode vc-mode)
   "  %["
   (:propertize mode-name face mode-line-mode-face)
   "%] "
   (:eval (propertize (format-mode-line minor-mode-alist)
                      'face 'mode-line-minor-mode-face))
   (:propertize mode-line-process face mode-line-process-face)
   (global-mode-string global-mode-string)
   ))

;; Extra mode line faces
(make-face 'mode-line-read-only-face)
(make-face 'mode-line-modified-face)
(make-face 'mode-line-filename-face)
(make-face 'mode-line-position-face)
(make-face 'mode-line-mode-face)
(make-face 'mode-line-minor-mode-face)
(make-face 'mode-line-process-face)

(set-face-attribute 'mode-line nil
                    :foreground "gray60" :background "gray20"
                    :inverse-video nil
                    :box '(:line-width 6 :color "gray20" :style nil))

(set-face-attribute 'mode-line-inactive nil
                    :foreground "gray80" :background "gray20"
                    :inverse-video nil
                    :box '(:line-width 6 :color "gray20" :style nil))

(set-face-attribute 'mode-line-read-only-face nil
                    :inherit 'mode-line-face
                    :foreground "#4271ae"
                    :box '(:line-width 2 :color "#4271ae"))

(set-face-attribute 'mode-line-modified-face nil
                    :inherit 'mode-line-face
                    :foreground "#c82829"
                    :background "gray20"
                    :box '(:line-width 2 :color "#c82829"))

(set-face-attribute 'mode-line-filename-face nil
                    :inherit 'mode-line-face
                    :foreground "#afafaf"
                    :weight 'bold)

(set-face-attribute 'mode-line-position-face nil
                    :inherit 'mode-line-face
                    :foreground "#ebebeb")

(set-face-attribute 'mode-line-mode-face nil
                    :inherit 'mode-line-face
                    :foreground "gray80")

(set-face-attribute 'mode-line-minor-mode-face nil
                    :inherit 'mode-line-mode-face
                    :foreground "gray40"
                    :height 110)

(set-face-attribute 'mode-line-process-face nil
                    :inherit 'mode-line-face
                    :foreground "#718c00")

;;;
(provide '01-status-line-setup)
;;; END here
